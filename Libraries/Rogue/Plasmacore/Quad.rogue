uses Plasmacore

augment Quad<<>>
  GLOBAL METHODS
    method create->Quad
      local result : Quad
      return result

  METHODS
    method draw( color:Color )
      drawable( color ).draw

    method draw( color:Color, fn:Function(DrawableQuad) )
      fn( drawable(color) )

    method drawable( color:Color )->DrawableQuad
      block a=Display.transform(a), b=Display.transform(b), c=Display.transform(c), d=Display.transform(d)
        return DrawableQuad( Quad<<XYZW>>(a,b,c,d), color )
      endBlock

    method fill( color:Color )
      drawable( color ).fill

    method fill( texture:Texture, uv:Quad, color=Color.WHITE:Color )
      localize drawable( color )
      drawable.texture = texture
      drawable.uv = uv
      drawable.fill
endAugment

augment Quad<<XYZW>>
  METHODS
    method to->Quad
      return Quad( a->XY, b->XY, c->XY, d->XY )

    method with_xy( quad:Quad )->Quad<<XYZW>>
      return Quad<<XYZW>>( XYZW(quad.a,a.z,a.w), XYZW(quad.b,b.z,b.w), XYZW(quad.c,c.z,c.w), XYZW(quad.d,d.z,d.w) )
endAugment
